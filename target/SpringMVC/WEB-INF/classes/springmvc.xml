<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.qby"></context:component-scan>

<!--    配置一个视图解析器-->
<!--    InternalResourceViewResolver优先级最低-->
    <bean id="internalResourceViewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
        <property name="prefix" value="/WEB-INF/pages/"></property>
        <property name="suffix" value=".jsp"></property>
<!--        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>-->
    </bean>
<!--    自定义视图解析器-->
    <bean id="myViewResolver" class="com.qby.view.MyViewResolver">
        <property name="order" value="1"></property>
    </bean>

    <!--让spingMVC管理国际化资源文件 配置一个资源文件管理器-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <!--        指定基础名称-->
        <property name="basename" value="i18n"></property>
    </bean>
    
<!--    <mvc:view-controller path="toLoginPageMVC" view-name="login"></mvc:view-controller>-->

    <!--    告诉springMVC 自己映射的请求就自己处理，不能处理的请求交给tomcat处理-->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>

    <!--    使用自己配置的类型转换组件-->
    <mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>

    <!--    告诉SpringMVC别用默认的ConversionService，而用自定义的ConversionService，-->
<!--    自定义类型转换器使用ConversionServiceFactoryBean 来注册 类型转换格式化功能就都有了-->
    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!-- 在Converter中添加自定义的类型转换器 -->
        <property name="converters">
            <set>
                <bean class="com.qby.util.MyStringToEmployeeConverter"></bean>
            </set>
        </property>
    </bean>

<!--    id必须是multipartResolver-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="#{1024*1024*20}"></property>
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

    <mvc:interceptors>
        <!--        配置某个拦截器，默认是拦截所有请求的-->
        <bean class="com.qby.interceptor.MyFirstInterceptor"></bean>
    </mvc:interceptors>

    <mvc:interceptors>
        <mvc:interceptor>
            <!--            只拦截特定请求地址-->
            <mvc:mapping path="/testit"/>
            <bean class="com.qby.interceptor.MySecondInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>


<!--    自定义区域信息解析器-->
<!--    <bean id="localeResolver" class="com.qby.locale.MyLocaleResolver"></bean>-->
<!--    区域信息从session取得-->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>

    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
    </mvc:interceptors>

    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
<!--        exceptionMappings配置哪些异常去哪些页面-->
        <property name="exceptionMappings">
            <props>
<!--                key异常全类名 value 是要去的页面视图名-->
                <prop key="java.lang.IndexOutOfBoundsException">error</prop>
            </props>
        </property>
<!--        指定错误信息取出时使用的key-->
        <property name="exceptionAttribute" value="ex">

        </property>
    </bean>

</beans>